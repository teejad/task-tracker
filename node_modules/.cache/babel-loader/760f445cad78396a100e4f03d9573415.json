{"ast":null,"code":"var _jsxFileName = \"/Users/davidandtiana/Desktop/my-react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./component/Header\";\nimport Tasks from \"./component/Tasks\";\nimport { useState } from 'react';\nimport AddTask from \"./component/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Finish coursework',\n    reminder: true,\n    dueDate: 'Feb 5th at 2:30pm'\n  }, {\n    id: 2,\n    text: 'School Meeting',\n    reminder: true,\n    dueDate: '2019-01-01'\n  }, {\n    id: 3,\n    text: 'Finish coursework',\n    reminder: false,\n    priority: 'low',\n    dueDate: '2019-01-01'\n  }]); //Delete Tasks and change the state \n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder \n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this) : 'No TASKS TO SHOW']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zbCS5I2P5Fxh0GUdCialJYFOFRI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davidandtiana/Desktop/my-react-app/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","tasks","setTasks","id","text","reminder","dueDate","priority","deleteTask","filter","task","toggleReminder","map","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAGK,qBAHL;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CACjC;AACIK,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADiC,EAOjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,gBAFV;AAGIC,IAAAA,QAAQ,EAAE,IAHd;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAPiC,EAajC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,mBAFV;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIE,IAAAA,QAAQ,EAAE,KAJd;AAKID,IAAAA,OAAO,EAAE;AALb,GAbiC,CAAD,CAAlC,CADa,CAwBd;;AACC,QAAME,UAAU,GAAIL,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAzBa,CA6Bb;;;AACA,QAAMQ,cAAc,GAAIR,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAWF,IAAD,IAAWA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGO,IAAJ;AAAUL,MAAAA,QAAQ,EAAE,CAACK,IAAI,CAACL;AAA1B,KAAjB,GAAuDK,IAA5E,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,EAECT,KAAK,CAACY,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEZ,KAAd;AACpB,MAAA,QAAQ,EAAEO,UADU;AACE,MAAA,QAAQ,EAAEG;AADZ;AAAA;AAAA;AAAA;AAAA,YAAnB,GACoD,kBAHrD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1CQX,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import Header from \"./component/Header\";\nimport Tasks from \"./component/Tasks\";\nimport { useState } from 'react'\nimport AddTask\n\n\nfrom \"./component/AddTask\";\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Finish coursework',\n        reminder: true,\n        dueDate: 'Feb 5th at 2:30pm'\n    },\n    {\n        id: 2,\n        text: 'School Meeting',\n        reminder: true,\n        dueDate: '2019-01-01'\n    },\n    {\n        id: 3,\n        text: 'Finish coursework',\n        reminder: false,\n        priority: 'low',\n        dueDate: '2019-01-01'\n    },\n\n ])   \n\n //Delete Tasks and change the state \n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  \n  //Toggle Reminder \n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => (task.id === id ? {...task, reminder: !task.reminder} : task)))\n  }\n\n  return (\n    <div className=\"container\">\n    <Header/>\n    {tasks.length > 0 ? <Tasks tasks={tasks}\n    onDelete={deleteTask} onToggle={toggleReminder}/> : ('No TASKS TO SHOW')}\n    </div>\n\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}